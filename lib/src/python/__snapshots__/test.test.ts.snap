// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TestTarget is synthesized correctly 1`] = `
{
  ".coveragerc": "[run]
branch = true
omit = 
  

[report]
fail_under = 80
format = text
skip_empty = true
skip_covered = false",
  ".gitattributes": "# ~~ Generated by projen. To modify, edit .projenrc.js and run "npx projen".

* text=auto eol=lf",
  ".gitignore": "# ~~ Generated by projen. To modify, edit .projenrc.js and run "npx projen".
node_modules/
!/.gitattributes
!/.projen/tasks.json
!/.projen/deps.json
!/.projen/files.json
!/pytest.ini
!/.coveragerc
.coverage
.pytest_cache
",
  ".projen/deps.json": {
    "//": "~~ Generated by projen. To modify, edit .projenrc.js and run "npx projen".",
    "dependencies": [
      {
        "name": "pytest-cov",
        "type": "devenv",
        "version": "6.0.*",
      },
      {
        "name": "pytest",
        "type": "devenv",
        "version": "8.3.*",
      },
    ],
  },
  ".projen/files.json": {
    "//": "~~ Generated by projen. To modify, edit .projenrc.js and run "npx projen".",
    "files": [
      ".coveragerc",
      ".gitattributes",
      ".gitignore",
      ".projen/deps.json",
      ".projen/files.json",
      ".projen/tasks.json",
      "pytest.ini",
    ],
  },
  ".projen/tasks.json": {
    "//": "~~ Generated by projen. To modify, edit .projenrc.js and run "npx projen".",
    "tasks": {
      "compile": {
        "description": "Only compile",
        "name": "compile",
      },
      "default": {
        "description": "Synthesize project files",
        "name": "default",
      },
      "eject": {
        "description": "Remove projen from the project",
        "env": {
          "PROJEN_EJECTING": "true",
        },
        "name": "eject",
        "steps": [
          {
            "spawn": "default",
          },
        ],
      },
      "package": {
        "description": "Creates the distribution package",
        "name": "package",
      },
      "post-compile": {
        "description": "Runs after successful compilation",
        "name": "post-compile",
      },
      "pre-compile": {
        "description": "Prepare the project for compilation",
        "name": "pre-compile",
      },
      "test": {
        "description": "Test project (unit tests/coverage)",
        "name": "test",
      },
      "test-unit": {
        "description": "Unit tests (pytest)",
        "name": "test-unit",
        "steps": [
          {
            "exec": ".venv/bin/pytest",
          },
        ],
      },
    },
  },
  "pytest.ini": "[pytest]
cache_dir = .cache/.pytest_cache
addopts = --cov=src --verbose
testpaths =
    tests
    integration
",
}
`;
